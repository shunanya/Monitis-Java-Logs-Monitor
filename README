This project presents the custom monitor that provide remotely monitoring Java logs based on Monitis Open API. 
The Java logs monitor works as separate Application to avoiding of  inadmissible affects and side effects onto the monitored application.
Besides, the Java Logs Monitor is fully implemented  on Java to get platform independence like monitored application.
Requirements for monitored application is the following
  - Aplication should use Log4J logging library
  - log_mon.jar have to be included in addition into the list of Aplication libraries
  - Log4J configuration should have XML format
  - The specially tuned SocketAppender has to be added in addition into Log4J configuration like depicted below

	<appender name="monitisAppender" class="org.apache.log4j.net.SocketAppender">
		<param name="Port" value="4560" />
		<param name="RemoteHost" value="localhost" />
		<param name="ReconnectionDelay" value="10000" />
		<param name="Threshold" value="ALL" />
		<filter class="org.monitis.logmonitor.logger.MonitisFilter">
			<param name="filterPattern" value="(Error|Fatal|Warn*|Attention)" />
			<param name="minAllowedLevel" value="WARN" />
		</filter>
	</appender>
Note that usage of SocketAppender gave us, in addition, a possibility to be wholly free of what other appenders uses monitored application because log records will be received directly from Logging system but not through a log file or some other secondary  sources.
So, the cooperation of monitored application and log monitor can be depicted as the following rough diagram
      -------------         -------------
     |             |       |             |
     | Monitored   | ----> | log-monitor | ---> Monitis
     | Application |  TCP  |             | HTTPs
      -------------         -------------  
                   filtered
                  log records
The project contain the following code
